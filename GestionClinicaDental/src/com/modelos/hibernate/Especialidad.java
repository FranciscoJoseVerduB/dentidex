package com.modelos.hibernate;
// Generated 5 may. 2021 19:19:57 by Hibernate Tools 5.4.27.Final

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList; 

import com.conexion.ConexionBBDD;

/**
 * Especialidad generated by hbm2java
 */
@SuppressWarnings("serial")
public class Especialidad implements java.io.Serializable, IOperable, INombreUnico{

	private int id;
	private String nombre; 

	public Especialidad() {
		this.id = 0;
		this.nombre = "";
	}
	public Especialidad(int id) {
		this.id = id;
	}

	public Especialidad(int id, String nombre) {
		this.id = id;
		this.nombre = nombre;
	}
 
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}
	
	 
 
	@Override
	public String toString() {
		return getNombre();
	}

	@Override
	public boolean cargar() { 
		try {
			ResultSet rs = ConexionBBDD.getDatos("SELECT * FROM Especialidades where id = " + this.getId());
			if(rs.next() == false) return false;
			else {  
				this.setNombre(rs.getString("Nombre")); 
			}
		} catch (SQLException e) { 
			e.printStackTrace();
			return false;
		} 
		return true;
	}

	@Override
	public ArrayList<Especialidad> getLista() {
		ArrayList<Especialidad> lista = new ArrayList<Especialidad>();
		try {
			ResultSet rs = ConexionBBDD.getDatos("SELECT * FROM Especialidades");
			while(rs.next()) {
				Especialidad g = new Especialidad(rs.getInt("Id"), rs.getString("Nombre"));
				lista.add(g); 
			}
		} catch (SQLException e) { 
			e.printStackTrace();
		} 
		return lista;
	}
	@Override
	public boolean guardar() {
		String sql = ""; 
		if(this.getId() == 0) {
			sql = "INSERT INTO Especialidades (Nombre)"
					+ "	VALUES ('" + this.getNombre().trim() + "')"; 
		}else {
			sql = "UPDATE Especialidades "
					+ " SET Nombre = '" + this.getNombre().trim() + "'"  
				+ " WHERE Id = " + this.getId();			
		} 	
		return ConexionBBDD.setDatos(sql); 
	}
	@Override
	public boolean esEliminable() {
		//Comprobamos si se ha realizado algun registro con esta entidad.
		if(Integer.parseInt(ConexionBBDD.getDato(
				"SELECT count(*) Existe " +
				 " FROM Especialidades E " +  
				 " INNER JOIN Medicos M on M.Id_Especialidad = E.ID" + 
				 " WHERE E.ID = " + this.getId()).toString()) > 0) return false;  
		return true;
	}
	@Override
	public boolean borrar() {
		String sql = 
				 "DELETE "
				+ "	FROM Especialidades" 
				+ "	WHERE ID = " + this.getId();
		return ConexionBBDD.setDatos(sql); 
	}
	@Override
	public boolean existeConMismoNombre(String nombre) {
		if(Integer.parseInt(ConexionBBDD.getDato("SELECT count(*) Existe FROM Especialidades Where Nombre = '" + nombre.trim() + "' and Id <>" + this.getId()).toString()) > 0) 
			return true;
			 
		return false;
	}

}
