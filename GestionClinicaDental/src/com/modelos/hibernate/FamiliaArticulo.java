package com.modelos.hibernate;
// Generated 5 may. 2021 19:19:57 by Hibernate Tools 5.4.27.Final

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList; 

import com.conexion.ConexionBBDD;

/**
 * FamiliaArticulo generated by hbm2java
 */
@SuppressWarnings("serial")
public class FamiliaArticulo implements java.io.Serializable, IOperable, ICodigoUnico {

	private int id;
	private String codigo;
	private String nombre; 

	public FamiliaArticulo() {
		this.id = 0;
	}
	
	public FamiliaArticulo(int id) {
		this.id = id;
	}

	public FamiliaArticulo(int id, String codigo, String nombre) {
		this.id = id;
		this.codigo = codigo;
		this.nombre = nombre;
	} 

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Override
	public String toString() {
		return getCodigo();
	}


	@Override
	public boolean cargar() {
		try {
			ResultSet rs = ConexionBBDD.getDatos("SELECT * FROM FamiliasArticulo WHERE Id = " + this.getId());
			if (rs.next() == false) return false;
			else { 
				setCodigo(rs.getString("Codigo"));
				setNombre(rs.getString("Nombre"));   
			}
		} catch (SQLException e) { 
			e.printStackTrace();
			return false;
		} 
		return true;
	}

	@Override
	public ArrayList<FamiliaArticulo> getLista() {
		ArrayList<FamiliaArticulo> lista = new ArrayList<FamiliaArticulo>();
		try {
			ResultSet rs = ConexionBBDD.getDatos("SELECT * FROM FamiliasArticulo");
			while(rs.next()) {
				FamiliaArticulo p = new FamiliaArticulo();
				p.setId(rs.getInt("Id"));
				p.setCodigo(rs.getString("Codigo"));
				p.setNombre(rs.getString("Nombre")); 
				
				lista.add(p); 
			}
		} catch (SQLException e) { 
			e.printStackTrace();
		} 
		return lista;
	}

	@Override
	public boolean guardar() {
		String sql = "";
		
		if(this.getId() == 0) {
			sql = "INSERT INTO FamiliasArticulo (Codigo, Nombre)"
					+ "	VALUES ('" + this.getCodigo().trim() + "', '" + 
									 this.getNombre().trim() + "')"; 
		}else {
			sql = "UPDATE FamiliasArticulo "
					+ " SET Codigo = '" + this.getCodigo().trim() + "',"
						+ "	Nombre = '" + this.getNombre().trim() + "'"  
				+ " WHERE Id = " + this.getId();			
		} 	
		return ConexionBBDD.setDatos(sql); 
	}

	@Override
	public boolean esEliminable() {
		//Comprobamos si se ha realizado alguna cita con el registro en cuestión.
		if(Integer.parseInt(ConexionBBDD.getDato(
				"SELECT count(*) Existe " +
				 " FROM FamiliasArticulo FA " +  
				 " INNER JOIN Articulos A on A.Id_FamiliaArticulo = FA.ID" + 
				 " WHERE FA.ID = " + this.getId()).toString()) > 0) return false;  
		return true;
	}

	@Override
	public boolean borrar() {
		String sql = 
				 "DELETE "
				+ "	FROM FamiliasArticulo" 
				+ "	WHERE ID = " + this.getId();
		return ConexionBBDD.setDatos(sql); 
	}

	@Override
	public boolean existeConMismoCodigo(String codigo) {
		if(Integer.parseInt(ConexionBBDD.getDato("SELECT count(*) Existe FROM FamiliasArticulo Where Codigo = '" + codigo.trim() + "' and Id <>" + this.getId()).toString()) > 0) 
			return true;
			 
		return false;
	}

}
