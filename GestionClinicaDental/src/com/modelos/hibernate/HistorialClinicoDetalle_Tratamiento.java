package com.modelos.hibernate;
// Generated 5 may. 2021 19:19:57 by Hibernate Tools 5.4.27.Final

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
 
import com.conexion.ConexionBBDD;

/**
 * HistorialClinicoDetalle_Tratamiento generated by hbm2java
 */
@SuppressWarnings("serial")
public class HistorialClinicoDetalle_Tratamiento implements java.io.Serializable, IOperable {

	private int id;
	private Diente diente; 
	private Tratamiento tratamiento;
	private String observaciones; 
	private HistorialClinicoDetalle historialClinicoDetalle; 
	
	public HistorialClinicoDetalle_Tratamiento() {
		this.id = 0;
		this.diente = new Diente();
		this.tratamiento = new Tratamiento();
	}
	public HistorialClinicoDetalle_Tratamiento(int id) {
		this.id = id;
	}

	public HistorialClinicoDetalle_Tratamiento(int id, Diente diente, Tratamiento tratamiento) {
		this.id = id;
		this.diente = diente; 
		this.tratamiento = tratamiento;
	}

	public HistorialClinicoDetalle getHistorialClinicoDetalle() {
		return historialClinicoDetalle;
	}
	public void setHistorialClinicoDetalle(HistorialClinicoDetalle historialClinicoDetalle) {
		this.historialClinicoDetalle = historialClinicoDetalle;
	} 
 

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Diente getDiente() {
		return this.diente;
	}

	public void setDiente(Diente dientes) {
		this.diente = dientes;
	}

	 
	public Tratamiento getTratamiento() {
		return this.tratamiento;
	}

	public void setTratamiento(Tratamiento tratamiento) {
		this.tratamiento = tratamiento;
	}

	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}  
	
	@Override
	public boolean cargar() {
		try {
			ResultSet rs = ConexionBBDD.getDatos("SELECT * FROM HistorialClinicoDetalle_Tratamientos WHERE ID = " + this.getId());
			if(rs.next() == false) return false;
			else {     
				setHistorialClinicoDetalle(historialClinicoDetalle);
				HistorialClinicoDetalle historialClinicoDetalle = new HistorialClinicoDetalle(rs.getInt("ID_HistorialClinicoDetalle"));
				historialClinicoDetalle.cargar();
				setHistorialClinicoDetalle(historialClinicoDetalle); 
				Diente diente = new Diente(rs.getInt("Id_Diente"));
				diente.cargar();
				setDiente(diente);
				Tratamiento tratamiento = new Tratamiento(rs.getInt("Id_Tratamiento"));
				tratamiento.cargar();
				setTratamiento(tratamiento);
				setObservaciones(rs.getString("Observaciones"));
			}
		} catch (SQLException e) { 
			e.printStackTrace();
			return false;
		} 
		return true;
	}
	@Override
	public ArrayList<HistorialClinicoDetalle_Tratamiento> getLista() {
		ArrayList<HistorialClinicoDetalle_Tratamiento> lista = new ArrayList<HistorialClinicoDetalle_Tratamiento>();
		try {
			ResultSet rs = ConexionBBDD.getDatos("SELECT * FROM HistorialClinicoDetalle_Tratamientos");
			while(rs.next()) {
				HistorialClinicoDetalle_Tratamiento p = new HistorialClinicoDetalle_Tratamiento();
				p.setHistorialClinicoDetalle(historialClinicoDetalle);
				HistorialClinicoDetalle historialClinicoDetalle = new HistorialClinicoDetalle(rs.getInt("ID_HistorialClinicoDetalle"));
				historialClinicoDetalle.cargar();
				p.setHistorialClinicoDetalle(historialClinicoDetalle);
				p.setId(rs.getInt("Id")); 
				Diente diente = new Diente(rs.getInt("Id_Diente"));
				diente.cargar();
				p.setDiente(diente);
				Tratamiento tratamiento = new Tratamiento(rs.getInt("Id_Tratamiento"));
				tratamiento.cargar();
				p.setTratamiento(tratamiento);
				p.setObservaciones(rs.getString("Observaciones"));
				lista.add(p); 
			}
		} catch (SQLException e) { 
			e.printStackTrace();
		} 
		return lista;
	}
	@Override
	public boolean guardar() {
		String sql = "";
		if(getId() == 0) { 
			sql += "INSERT INTO HistorialClinicoDetalle_Tratamientos(Observaciones, Id_Diente, Id_HistorialClinicoDetalle, Id_Tratamiento) VALUES " +
					"("+ (getObservaciones() == null? "null" : "'" + getObservaciones() + "'") + "," + 
						getDiente().getId() + "," +
						"(SELECT MAX(ID) FROM HistorialClinicoDetalle)," + 
						getTratamiento().getId() +						
					");";
		}else sql+= "UPDATE HistorialClinicoDetalle_Tratamientos SET Observaciones = " + (getObservaciones() == null? "null" : "'" + getObservaciones() + "'") + ";";
		return ConexionBBDD.setDatos(sql); 
	}
	@Override
	public boolean esEliminable() {
		//Comprobamos si ya se ha facturado alguno de sus tratamientos
		if(Integer.parseInt(ConexionBBDD.getDato(
				"SELECT count(*)"
				+ "	FROM HistorialClinicoDetalle_Tratamientos HCT"
					+ "	INNER JOIN FacturaDetalle FD on FD.ID_HistorialClinicoDetalle_Tratamiento = HCT.ID" 
				+ " WHERE HCT.ID = " + this.getId()).toString()) > 0) return false;
		 
		return true;
	}
	@Override
	public boolean borrar() {
		String sql = 
				 "DELETE "
				+ "	FROM HistorialClinicoDetalle_Tratamientos"
				+ "	WHERE ID = " + this.getId();
			 return ConexionBBDD.setDatos(sql); 
	}
	public ArrayList<HistorialClinicoDetalle_Tratamiento> getLista(HistorialClinicoDetalle historialClinicoDetalle) {
		ArrayList<HistorialClinicoDetalle_Tratamiento> lista = new ArrayList<HistorialClinicoDetalle_Tratamiento>();
		try {
			ResultSet rs = ConexionBBDD.getDatos("SELECT * FROM HistorialClinicoDetalle_Tratamientos WHERE ID_HistorialClinicoDetalle = " + historialClinicoDetalle.getId());
			while(rs.next()) {
				HistorialClinicoDetalle_Tratamiento p = new HistorialClinicoDetalle_Tratamiento();
				p.setHistorialClinicoDetalle(historialClinicoDetalle);
				p.setId(rs.getInt("Id")); 
				Diente diente = new Diente(rs.getInt("Id_Diente"));
				diente.cargar();
				p.setDiente(diente);
				Tratamiento tratamiento = new Tratamiento(rs.getInt("Id_Tratamiento"));
				tratamiento.cargar();
				p.setTratamiento(tratamiento);
				p.setObservaciones(rs.getString("Observaciones"));
				lista.add(p); 
			}
		} catch (SQLException e) { 
			e.printStackTrace();
		} 
		return lista;
	}
 
}
